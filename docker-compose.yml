version: '3.9'
services:
  app:
    build:
      args:        
        USER: ${USER:-0}
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
      context: .
      dockerfile: Dockerfile
      
    container_name: avs-app
    image: avs
    volumes:
      - ../:/var/www/
    networks:
      - avs_network

  supervisor:
    build:
        context: .
        dockerfile: supervisor.dockerfile
    container_name: avs-supervisor
    volumes:
      - ../:/var/www/
    networks:
      - avs_network
  # appold:
  #   build:
  #    args:
  #      USER: ${USER:-0}
  #      USER_ID: ${USER_ID:-0}
  #      GROUP_ID: ${GROUP_ID:-0}
  #    context: .
  #    dockerfile: Dockerfile
  #   container_name: avs-app2
  #   volumes:
  #     - ./old:/var/www/
  #   networks:
  #     - avs_network
  db:
    image: postgres:latest
    container_name: avs-postgres
    volumes:
      - ${HOME}/docker_data/postgres_data:/var/lib/postgresql
      #- D:\\docker_data\\mysql\\avs:/var/lib/mysql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: laravel9
    ports:
      - 5432:5432
    networks:
      - avs_network
  mongodb:
    image: mongo:6.0
    container_name: avs-mongo
    #environment:
    #  MONGO_INITDB_DATABASE: tkdn
    #  MONGO_INITDB_ROOT_USERNAME: mongouser
    #  MONGO_INITDB_ROOT_PASSWORD: password
      #mongosh -u mongouser -p password --authenticationDatabase admin
    volumes:
      - /home/arozie/docker_data/mongo_data:/data/db
    ports:
      - 27017:27017
    networks:
      - avs_network
  minio:
    image: minio/minio
    container_name: avs-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /home/arozie/docker_data/minio:/data
    environment:
      MINIO_ROOT_USER: tkdn
      MINIO_ROOT_PASSWORD: tkdnminio
    command: server --console-address ":9001" /data
    networks:
      - avs_network
  redis:
    image: redis:7.0-alpine
    container_name: avs-redis
    ports:
      - 63791:6379
    networks:
      - avs_network
  nginx:
    image: nginx:alpine
    container_name: avs-nginx
    ports:
      - 80:80      
    volumes:
      - ../:/var/www/
      - ./avs.conf:/etc/nginx/conf.d/default.conf
    networks:
      - avs_network

networks:
  avs_network:
    driver: bridge
